Nástroj: ASCII-art
Autor: Jan Kuchař

Zadání

Tato semestrální práce patří do kategorie konzolových utilit. Vaším cílem je vytvořit nástroj, který uživatel z terminálu spustí (s různými parametry). Případné parametry nástroje se nesnažte definovat přímo v kódu (a to ani pomocí konstant). Umístěte je do konfiguračních souborů (jednoho nebo více), které váš program bude načítat.
Vaším cílem je napsat nástroj, který na vstupu získá obrázek nebo sadu několika obrázků a překonvertuje je do ASCII art vizualizace. Pomocí parametrů při spuštění a/nebo konfiguračních souborů parametrizujte generování souborů.

Implementujte následující funkcionality:
 - Nástroj načítá obrázky v alespoň jednom běžném souborovém formátu. (př. BMP, PNG, JPEG, SVG, …)
 - Implementujte alespoň 5 druhů různých operací (př. změna jasu, negativ, konvoluce, změna velikosti obrázku, …)
 - Výstupem nástroje je ASCII art (textové odstíny šedi) vytvořený z obrázků, který umí zobrazit a uložit do souboru.
 - Nástroj musí být konfigurovatelný ze souboru:
    - definice ASCII přechodů (př. název, znaky seřazené dle hustoty, …)
    - definice aplikovaných filtrů (jeden filtr může být aplikován víckrát s různými parametry)
 - V případě více předaných obrázků:
    - Nástroj spustí prezentaci jednotlivých snímků, kterou lze ovládat (alespoň změna snímku, zastavení prezentace, spuštění prezentace).
    - Lze definovat filtry pro jednotlivé obrázky i pro celou množinu.

Kde lze využít polymorfismus? (doporučené)
 - filtry: změna jasu, negativ, konvoluce, změna velikosti obrázku, …
 - různé styly ASCII vykreslení
 - formáty vstupu: BMP, SVG, RAW, …
 - druh výstupu: zobrazení, soubor, prezentace, …
 - uživatelské rozhraní: konzole, ncurses, SDL, OpenGL (různé varianty), …

Specifikace

Budu implementovat nástroj, který načte několik vstupních parametrů. Tyto vstupní parametry by měly obsahovat cesty k obrázkům, který by pak načetl, znaky, který pak využije k překladu ze stupňů šedi do znaků, filtry, které pak na určité obrázky aplikuje, a následně i druh výstupu.

Filtry budou pracovat na úrovni již přeložených obrázků. Tyto filtry budou moct zvýšit či snížit jas, kontrast, otočit obrázek o 90 stupňů doleva, doprava, o 180 stupňů, zrcadlit horizontálně či vertikálně, udělat negativ obrázku, zvětšit či zmenšit obrázek, přidání vodoznaku, a další.

Program by měl umět načíst více druhů obrázků. Konkrétně by měl umět načítat soubory JPG, PNG, TIFF a BMP.

Na výstupu by pak měly být úspěšně vygenerované obrázky, podle druhu výstupu v souborech, nebo na terminálu.

Druhy výstupů budou tři. První bude vygenerovaný obrázky vypisovat na standardní výstup a následně ukončí program. Druhý bude tyto obrázky ukládat do textových souborů. Očekává se, že uživatel zadá i jména výstupních souborů. Pokud tak neučiní, program se pokusí obrázky ukládat do nových souborů. Třetí z obrázků spustí prezentaci obrázků, a výstup bude opakovat, dokud ho uživatel neukončí.

Polymorfismus

Polymorfismus je aplikovaný v rámci hierarchie tříd CFilter a COutput.

Ze třídy CFilter se bude dědit několik tříd, jejichž prací bude implementovat vlastní metodu apply, kde ze vstupní matice bude vracet novou matici, kde bude filtr aplikovaný. Polymorfismus této třídy umožňuje triviálně přidávat nové filtry.

Ze třídy COutput se pak budou dědit 3 třídy právě podle druhu výstupu, které budou implementovat vlastní výstupní chování, které se zavolají metodou output. Polymorfismus této třídy umožňuje implementovat nové druhy výstupů.

Dále je CMatrix a třídou šablonovou. Toto je využito k uložení stupňů šedi obrázku a následně i matice znaků, vygenerovaný právě ze stupňů šedi.

Zdroje obrázků:
https://commons.wikimedia.org/w/index.php?title=File:Redwingblackbird1.jpg&oldid=605881990
https://www.nasa.gov/sites/default/files/thumbnails/image/edu_ring_a-round_the_saturn.jpg
https://web.archive.org/web/20110526220856/http://sipi.usc.edu/database/database.php?volume=misc&image=12#top